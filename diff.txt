17c17
< ARCH = # knl knc hsw pow8
---
> ARCH = # knl knc hsw
67c67
<     CXX = g++
---
>     CXX = CC
103,107d102
<   OCXXFLAGS += -std=c++11
< 
<   ifeq ($(strip ${ARCH}),pow8)
<     ARCH_FLAG = -mcpu=power8
<   endif
108a104
>  
111,112c107
<     OCXXFLAGS += -fopenmp
<     LDFLAGS += -fopenmp
---
>     LDFLAGS = -fopenmp
117,118c112
< # enable all warnings with exceptions
< OCFLAGS += -Wall -Wno-unused-variable -Wno-unused-but-set-variable -Wno-unknown-pragmas -Wno-unused-function
---
> #OCFLAGS += -Wall
127d120
<   OCXXFLAGS += -qarch=450 -qlanglvl=stdc++11
136d128
<   OCXXFLAGS += -std=c++11
144,146d135
<   else ifeq ($(strip ${ARCH}),skx)
<   ARCH_FLAG = -xCORE-AVX512
<   BINEXT=.skx
156d144
<   OCXXFLAGS += ${ARCH_FLAG}
159d146
<   OCXXFLAGS += -parallel-source-info=2 -debug inline-debug-info -qopt-report=5
163,164c150
<     OCXXFLAGS += -qopenmp
<     LDFLAGS += -qopenmp
---
>     LDFLAGS = -qopenmp
174d159
<   OCXXFLAGS += -std=c++11
191d175
<   OCXXFLAGS += ${ARCH_FLAG}
194d177
<   OCXXFLAGS += -parallel-source-info=2 -debug inline-debug-info -qopt-report=5
198,199c181
<     OCXXFLAGS += -qopenmp
<     LDFLAGS += -qopenmp
---
>     LDFLAGS = -qopenmp
274d255
< TAG=""
276,277c257,258
< QMPPAR = ${SCIDAC}/qmp${TAG}
< QIOPAR = $(SCIDAC)/qio${TAG}
---
> QMPPAR = ${SCIDAC}/qmp
> QIOPAR = $(SCIDAC)/qio
279,281c260,262
< QMPSNG = ${SCIDAC}/qmp-single${TAG}
< QIOSNG = $(SCIDAC)/qio-single${TAG}
< QLA = ${SCIDAC}/qla${TAG}
---
> QMPSNG = ${SCIDAC}/qmp-single
> QIOSNG = $(SCIDAC)/qio-single
> QLA = ${SCIDAC}/qla
283,284c264,266
< QDP = ${SCIDAC}/qdp${TAG}
< QOPQDP = ${SCIDAC}/qopqdp${TAG}
---
> QDP = ${SCIDAC}/qdp
> QOPQDP = ${SCIDAC}/qopqdp
> #QOPQDP = ${SCIDAC}/qopqdp-lapack # BG/P
299c281
< WANTFFTW = #true    # On cori, edison loaded by default, but need "true"
---
> WANTFFTW = #true
305,306c287
<   FFTW_HEADERS = ${FFTW}/float-mvapich2/include
<   INCFFTW = -I${FFTW_HEADERS}
---
>   INCFFTW = -I${FFTW}/float-mvapich2/include
310,311c291
<   FFTW_HEADERS = ${FFTW}/double-mvapich2/include
<   INCFFTW = -I${FFTW_HEADERS}
---
>   INCFFTW = -I${FFTW}/double-mvapich2/include
315d294
<   PACKAGE_HEADERS += ${FFTW_HEADERS}
327c306
< # LIBLAPACK = -L/usr/local/lib64 -llapack -lblas
---
> #LIBLAPACK = -L/usr/local/lib64 -llapack -lblas
331,332c310,311
< # LDFLAGS = -Wl,-rpath,"/usr/local/atlas-3.10-lapack-3.4.2/lib" -L/usr/local/atlas-3.10-lapack-3.4.2/lib
< # LIBS = $(LDFLAGS) -lprimme -lm  -llapack -lptf77blas -lptcblas -latlas -lgfortran -lpthread
---
> #LDFLAGS = -Wl,-rpath,"/usr/local/atlas-3.10-lapack-3.4.2/lib" -L/usr/local/atlas-3.10-lapack-3.4.2/lib
> #LIBS = $(LDFLAGS) -lprimme -lm  -llapack -lptf77blas -lptcblas -latlas -lgfortran -lpthread
334c313
< # NERSC Cori Haswell
---
> # NERSC Cori
337,339d315
< # NERSC Cori KNL
< # LIBLAPACK = -L${LIBSCI_BASE_DIR}/INTEL/15.0/mic_knl/lib -lsci_intel
< 
348c324
< # PRIMME version 2.0
---
> # PRIMME version 1.1
351,354c327
<   PRIMME_HEADERS = ${HOME}/PRIMME/include
<   INCPRIMME = -I${PRIMME_HEADERS}
<   PACKAGE_HEADERS += ${PRIMME_HEADERS}
<   LIBPRIMME = -L${HOME}/PRIMME/lib -lprimme
---
>   LIBPRIMME = -L${HOME}/milc/install/PRIMME -lzprimme
357,360c330
< #----------------------------------------------------------------------
< # 14. ARPACK Options (for ks_eigen).  REQUIRES LAPACK AS WELL.
< 
< WANTARPACK = #true
---
> # PRIMME version 1.2
362,365c332,334
< ifeq ($(strip ${WANTARPACK}),true)
< #  LIBARPACK = -L/usr/lib64 -lparpack  -larpack -lifcore -llapack -lblas
<   LIBARPACK = -L/usr/lib64 -larpack
< endif
---
> # ifeq ($(strip ${WANTPRIMME}),true)
> #   LIBPRIMME = -L${HOME}/milc/install/PRIMME -lprimme
> # endif
370,375c339,344
< WANTQUDA    ?= #true
< WANT_CL_BCG_GPU ?= #true
< WANT_FN_CG_GPU ?= #true
< WANT_FL_GPU ?= #true
< WANT_FF_GPU ?= #true
< WANT_GF_GPU ?= #true
---
> WANTQUDA    = #true
> WANT_CL_BCG_GPU = #true
> WANT_FN_CG_GPU = #true
> WANT_FL_GPU = #true
> WANT_FF_GPU = #true
> WANT_GF_GPU = #true
381,382c350
<   INCQUDA = -I${QUDA_HOME}/include -I${QUDA_HOME}/tests
<   PACKAGE_HEADERS += ${QUDA_HOME}/include
---
>   INCQUDA = -I${QUDA_HOME}/include -I/lib -I${QUDA_HOME}/tests
388d355
<   PACKAGE_HEADERS += ${CUDA_HOME}/include
390d356
<   QUDA_HEADERS = ${QUDA_HOME}/include
432,433d397
< WANT_FN_CG_QPHIX = true
< WANT_GF_QPHIX = true
435c399
< QPHIX_HOME = ../QPhiX_MILC/milc-qphix
---
> QPHIX_HOME = ${HOME}/QPhiX/mbench
440d403
<   PACKAGE_HEADERS += ${QPHIX_HOME}
443d405
<   QPHIX_HEADERS = ${QPHIX_HOME}
473,564d434
<   QPHIX_HEADERS   = ${QPHIX_HOME}
<   PACKAGE_HEADERS += ${QPHIX_HEADERS}
<   QPHIX_LIBRARIES = ${QPHIX_HOME}
< 
<   ifeq ($(strip ${WANT_FN_CG_QPHIX}),true)
<     HAVE_FN_CG_QPHIX = true
<     CPHI += -DUSE_CG_QPHIX
<   endif
< 
<   ifeq ($(strip ${WANT_GF_QPHIX}),true)
<     HAVE_GF_QPHIX = true
<     CPHI += -DUSE_GF_QPHIX
<   endif
< 
< endif
< 
< #----------------------------------------------------------------------
< # 16. Grid Options
< 
< WANTGRID = #true
< 
< ifeq ($(strip ${WANTGRID}), true)
< 
<   HAVE_GRID = true
<   CPHI = -DHAVE_GRID
< 
<   ifeq ($(strip ${MPP}),true)
<     ifeq ($(strip ${ARCH}),knl)
<       GRID_ARCH = avx512
<     else ifeq ($(strip ${ARCH}),hsw)
<       GRID_ARCH = avx2
<     endif
<   else
<     # Scalar version                                                                
< 
<     GRID_ARCH = scalar
< 
<   endif
< 
<   GRID_HOME = ../Grid/install-${GRID_ARCH}
<   GRID_LIBRARIES = ${GRID_HOME}/lib
<   LIBGRID = -L${GRID_LIBRARIES} -lGrid
<   GRID_HEADERS = ${GRID_HOME}/include
<   INCGRID = -I${GRID_HEADERS}
< 
<   PACKAGE_HEADERS += ${GRID_HEADERS}/Grid
<   PACKAGE_DEPS += Grid
< 
< endif
< 
< #----------------------------------------------------------------------
< # 16. QPhiXJ (JLab) Options
< 
< WANTQPHIXJ = #true
< 
< # Choose vectorization parameters.
< # Choices 4, 8 (or 1 for scalar)
< QPHIXJ_SOALEN=4
< 
< ifeq ($(strip ${WANTQPHIXJ}), true)
< 
<   HAVE_QPHIXJ = true
<   CPHI += -DHAVE_QPHIXJ
< 
<   ifeq ($(strip ${MPP}),true)
< 
<     # QMP versions of QPHIXJ
< 
<     QPHIXJ_HOME = ../QPhiX_JLab/install
< 
<     ifeq ($(strip ${ARCH}),knl)
<       QPHIXJ_ARCH = avx512
<     else ifeq ($(strip ${ARCH}),hsw)
<       QPHIXJ_ARCH = avx2
<     endif
<   else
<     # Scalar version
<     QPHIXJ_ARCH = scalar
<     QPHIXJ_SOALEN = 1
<   endif
< 
<   # NOTE: These are QMP versions of QPHIXJ so requires QMP
< 
<   QPHIXJ_HOME = ../QPhiX_JLab/install/dslash-${QPHIXJ_ARCH}-s${QPHIXJ_SOALEN}
<   QPHIXJ_LIBRARIES = ${QPHIXJ_HOME}/lib
<   LIBQPHIXJ = -L${QPHIXJ_LIBRARIES} -lqphix_solver 
<   QPHIXJ_HEADERS = ${QPHIXJ_HOME}/include
<   INCQPHIXJ = -I${QPHIXJ_HEADERS}
< 
<   PACKAGE_HEADERS += ${QPHIXJ_HEADERS}
<   PACKAGE_DEPS += QPhiX_JLab
< 
568c438
< # 17. Linker (need the C++ linker for QUDA, QPHIX, GRID)
---
> # 17. Linker (need the C++ linker for QUDA and QPHIX)
575,578d444
<   else ifeq ($(strip ${WANTQPHIXJ}),true)
<     LD  = ${CXX}
<   else ifeq ($(strip ${WANTGRID}),true)
<     LD  = ${CXX}
753,761c619
< # If we are using QUDA, the backward links are unused, so we should
< # avoid unecessary overhead and use the standard dslash.  Note that
< # dslash_fn also has hooks in place to offload any dslash_fn_field
< # calls to QUDA
< ifeq ($(strip ${WANTQUDA}),true)
<   KSCGSTORE = -DFEWSUMS
< else
<   KSCGSTORE = -DDBLSTORE_FN -DFEWSUMS -DD_FN_GATHER13
< endif
---
> KSCGSTORE = -DDBLSTORE_FN -DFEWSUMS -DD_FN_GATHER13 
796,799d653
< # PRIMME_PRECOND
< # POLY_EIGEN
< # MATVEC_PRECOND
< # CHEBYSHEV_EIGEN
801c655
< KSCGMULTI = -DKS_MULTICG=HYBRID # -DNO_REFINE # -DHALF_MIXED
---
> KSCGMULTI = -DKS_MULTICG=HYBRID # -DHALF_MIXED # -DNO_REFINE
883c737
< INCADD = ${INCFFTW} ${INCPRIMME} ${INCQUDA} ${INCQPHIX} ${INCQPHIXJ} ${INCGRID} ${INCVTUNE}
---
> INCADD = ${INCFFTW} ${INCQUDA} ${INCQPHIX} ${INCVTUNE}
888c742,746
< LIBADD = ${LIBFFTW} ${LIBPRIMME} ${LIBLAPACK} ${LIBQUDA} ${LIBQPHIX} ${LIBQPHIXJ} ${LIBGRID} ${LIBVTUNE}
---
> LIBADD = ${LIBFFTW} ${LIBPRIMME} ${LIBLAPACK} ${LIBQUDA} ${LIBVTUNE}
> 
> ifeq ($(strip ${WANTQPHIX}), true)
>   LIBADD += ${LIBQPHIX}
> endif
909d766
<   OCXXFLAGS += -DOMP
917c774
<      COMMTYPE = MPI_COMMS
---
>      COMMTYPE = MPI
942,949d798
< ifeq ($(strip ${WANTQPHIXJ}),true)
<   QPHIXPREC = -DQPHIXJ_PrecisionInt=${PRECISION}
< endif
< 
< ifeq ($(strip ${WANTGRID}),true)
<   GRIDPREC = -DGRID_PrecisionInt=${PRECISION}
< endif
< 
969,970c818
< # Temporarily define both precisions until we switch completely to MILC_PRECISION
< CPREC = -DMILC_PRECISION=${PRECISION} -DPRECISION=${PRECISION} ${QDPPREC} ${QOPPREC} ${QPHIXPREC} ${GRIDPREC}
---
> CPREC = -DPRECISION=${PRECISION} ${QDPPREC} ${QOPPREC} ${QPHIXPREC}
976,978d823
< 	${DEFINES} ${ADDDEFINES} ${IMPI} ${INCADD}
< CXXFLAGS = ${OPT} ${OCXXFLAGS} -D${COMMTYPE} ${CODETYPE} ${INLINEOPT} \
<         ${CPREC} ${CLFS} ${INCSCIDAC} -I${MYINCLUDEDIR} ${DARCH} \
